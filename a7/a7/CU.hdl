/**
 * Hardwired control unit for the multi-cycle implementation 
 * of the Larc ISA
 * Authors: Martin Mueller & Isaiah Ley
 */

CHIP CU {

    IN opcode[4];
    OUT out[16], out2[8];

    PARTS:
    Mux16Way16(a[0]=false, a[1]=true, a[2..15]=false,
               b[0..1]=false, b[2]=true, b[3..15]=false,
               c=false,
               d=false,
               e=false,
               f=false,
               g[0]=false, g[1..2]=true, g[3..15]=false,
               h[0..2]=false, h[3]=true, h[4..15]=false,
               i[0]=false, i[1]=true, i[2]=false, i[3]=true, i[4..15]=false,
               j[0..1]=true, j[2]=false, j[3]=true, j[4..15]=false,
               k[0..1]=false, k[2..3]=true, k[4..15]=false,
               l[0]=true, l[1]=false, l[2..3]=true, l[4..15]=false,
               m[0]=false, m[1..3]=true, m[4..15]=false,
               n[0]=true, n[1..3]=false, n[4]=true, n[5..15]=false,
               o[0..1]=true, o[2..3]=false, o[4]=true, o[5..15]=false,
               p[0..1]=false, p[2]=true, p[3]=false, p[4]=true, p[5..15]=false, sel=opcode, out=dispatchROM);
    Mux4Way16(a=incOut, b=dispatchROM, c=false, d[0..1]=false, d[2]=true, d[3]=false, d[4]=true, d[5..15]=false, sel[0]=addCtl1, sel[1]=addCtl2, out=muxOut);
    STATE(in=muxOut, load=true, out[0]=stateOut0, out[1]=stateOut1, out[2]=stateOut2, out[3]=stateOut3, out[4]=stateOut4);
    Inc16(in[0]=stateOut0, in[1]=stateOut1, in[2]=stateOut2, in[3]=stateOut3, in[4]=stateOut4, out=incOut);
    ROM32K(address[0]=stateOut0, address[1]=stateOut1, address[2]=stateOut2, address[3]=stateOut3, address[4]=stateOut4, address[5..14]=false, out[0]=romOut0, out[1]=romOut1, out[2]=romOut2, out[3]=romOut3, out[4]=romOut4, out[5]=out2[0], out[6]=out2[1], out[7]=out2[2], out[8]=out2[3], out[9]=out2[4], out[10]=out2[5], out[11]=out2[6], out[12]=out2[7], out[13]=extra, out[14]=addCtl1, out[15]=addCtl2);
    
    //states 0 to 15, bits 0 to 15
    Mux16Way16(a[0]=false, a[1]=true, a[2..3]=false, a[4]=true, a[5..15]=false,
               b[0..10]=false, b[11..13]=true, b[14..15]=false,
               c[0..13]=false, c[14]=true, c[15]=false,
               d[0..7]=false, d[8..10]=true, d[11..15]=false,
               e[0..13]=false, e[14]=true, e[15]=false,
               f[0..7]=false, f[8..10]=true, f[11..15]=false,
               g[0..13]=false, g[14]=true, g[15]=false,
               f[0..7]=false, f[8..10]=true, f[11..15]=false,
               h[0..7]=false, h[8..10]=true, h[11..15]=false,
               i[0..13]=false, i[14]=true, i[15]=false,
               j[0..7]=false, j[8..10]=true, j[11..15]=false,
               k[0..6]=false, k[7]=true, k[8..9]=false, k[10]=true,
               k[11..15]=false,
               l[0..9]=false, l[10]=true, l[11..15]=false,
               m[0]=false, m[1]=true, m[2..14]=false, m[15]=true,
               n[0]=false, n[1]=true, n[2..14]=false, n[15]=true,
               o[0..5]=false, o[6]=true, o[7..13]=false, o[14]=true,
               o[15]=false,
               p[0..1]=false, p[2]=true, p[3..4]=false, p[5]=true,
               p[6..15]=false,
               sel[0]=romOut0, sel[1]=romOut1, sel[2]=romOut2, sel[3]=romOut3, out=mux16Out);
               
    //state 16 to 20, bits 0 to 15
    Mux8Way16(a[0..7]=false, a[8]=true, a[9]=false, a[10]=true,
              a[11..15]=false,
              b[0..13]=false, b[14]=true, b[15]=false,
              c[0..1]=false, c[2..3]=true, c[4..15]=false,
              d[0]=false, d[1]=true, d[2..8]=false, d[9..10]=true,
              d[11..15]=false,
              e[0]=true, e[1..15]=false,
              f=false, g=false, h=false,
              sel[0]=romOut0, sel[1]=romOut1, sel[2]=romOut2, out=mux8Out);
              
    //figure out which mux has the final output bits 0 to 15
    Mux16(a=mux16Out, b=mux8Out, sel=romOut4, out[0]=out[0],
          out[1]=out[1], out[2]=out[2], out[3]=out[3], out[4]=out[4],
          out[5]=out[5], out[6]=out[6], out[7]=out[7], out[8]=out[8],
          out[9]=out[9], out[10]=out[10], out[11]=out[11], out[12]=out[12],
          out[13]=out[13], out[14]=out[14], out[15]=out[15]);
}
